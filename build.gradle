plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'net.darkhax.curseforgegradle' version "1.1.18"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://maven.parchmentmc.org' }						//Parchment
	maven { url = "https://mvn.devos.one/snapshots/" } 					//Porting lib
	maven { url = "https://mvn.devos.one/releases/" } 					//Porting lib
	maven { url = 'https://maven.ladysnake.org/releases' } 				//CCA, PAL
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }	//Reach Entity Attributes
	maven { url = "https://api.modrinth.com/maven" }					//Projectile damage, Additional Entity Attributes
	maven { url = "https://jitpack.io/" }								//Mixin Squared
	maven { url = "https://maven.shedaniel.me" }						//REI, Arch
	maven { url = "https://maven.terraformersmc.com" }					//Trinkets, EMI
	maven { url = "https://cursemaven.com" }							//Conjuring
	mavenLocal()														//Fakerlib TODO Create maven/move to jitpack
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Porting lib
	modApi(include("io.github.fabricators_of_create.Porting-Lib:attributes:${project.port_lib_version}"))
	modApi(include("io.github.fabricators_of_create.Porting-Lib:entity:${project.port_lib_version}"))
	modApi(include("io.github.fabricators_of_create.Porting-Lib:extensions:${project.port_lib_version}"))

	// Fakerlib
	modImplementation("dev.bagel.fakerlib:FakerLib:${project.fakerlib_version}")

	// CCA + PAL
	modApi(include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"))
	modApi(include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}"))
	modImplementation(include("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"))

	// Trinkets
	modCompileOnly(modRuntimeOnly"dev.emi:trinkets:${project.trinkets_version}")

	// Reach entity attributes
	modApi(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_lib_version}"))

	// Projectile Damage Attribute
	modApi(include("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric"))

	// Additional Entity Attributes
	modApi(include("maven.modrinth:AdditionalEntityAttributes:${project.additional_attributes}"))

	//Mixin^2 for mod compat
	implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixin_squared_version}"))

	// REI
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"

	// EMI
	modCompileOnly "dev.emi:emi-fabric:${emi_version}"

	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
					modRuntimeOnly "dev.architectury:architectury-fabric:${project.arch_version}"; break
		case "emi": modRuntimeOnly("dev.emi:emi-fabric:${project.emi_version}"); break
		case "disabled": break
		default: println("Unknown recipe viewer specified: $recipe_viewer. Must be EMI, REI or disabled.")
	}

	//Conjuring (has specific compat)
	modCompileOnly "curse.maven:conjuring-422310:${project.conjuring_id}"

	//Artifacts (They register attributes to their items that work differently than normal)
	modCompileOnly ("curse.maven:artifacts-312353:5174587")
}

loom {
	accessWidenerPath = file("src/main/resources/zenith_attributes.aw")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "zenith-attributes"
	versionType = "beta"
	versionName = "Zenith Attributes " + project.version
	uploadFile = remapJar
	gameVersions = ["1.20.1"]
	loaders = ["fabric"]
	changelog = "[Changelog](https://github.com/TheWinABagel/ZenithAttributes/blob/master/changelog.md)"
	dependencies {
		required.project "fabric-api"
		required.project("fakerlib")
		embedded.project("porting_lib")
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = System.getenv("cf_token")
	def mainFile = upload(910078, remapJar)
	mainFile.changelog = "https://github.com/TheWinABagel/ZenithAttributes/blob/master/changelog.md"
	mainFile.releaseType = "beta"
	//mainFile.addJavaVersion("17")
	mainFile.addGameVersion("1.20.1")
	mainFile.addModLoader("fabric")
	mainFile.displayName = "zenith_attributes-" + project.version
}